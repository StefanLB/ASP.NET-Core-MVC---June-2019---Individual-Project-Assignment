@model IEnumerable<TrainConnected.Web.ViewModels.Withdrawals.WithdrawalsAllViewModel>
@using TrainConnected.Data.Models.Enums
@using System.Globalization;
@using TrainConnected.Common

@{
    ViewData["Title"] = "All";
    var balance = this.ViewData["userBalance"];
    var pending = this.ViewData["pendingWithdrawals"];
    var pendingWithdrawals = Model.Where(s => s.Status == nameof(StatusCode.Initiated) || s.Status == nameof(StatusCode.InProcess));
    var completedWithdrawals = Model.Where(s => s.Status == nameof(StatusCode.Approved) || s.Status == nameof(StatusCode.Rejected));
}

<h1>Withdrawal history</h1>

<h5>Balance: @balance BGN</h5>
<h5>Pending Withdrawals: @pending BGN</h5>
<p>
    <a asp-action="Create">Create New</a>
</p>
<h4>Your Pending Withdrawals</h4>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdditionalInstructions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in pendingWithdrawals)
        {
            <tr>
                <td>
                    @item.Id
                </td>
                <td>
                    @item.Amount BGN
                </td>
                <td>
                    @item.AdditionalInstructions
                </td>
                <td>
                    @item.CreatedOn.ToLocalTime().ToString(GlobalConstants.DateTimeFormat, CultureInfo.InvariantCulture)
                </td>
                <td>
                    @item.Status
                </td>
            </tr>
        }
    </tbody>
</table>
<h4>Your Completed Withdrawals</h4>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdditionalInstructions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CompletedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ResolutionNotes)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in completedWithdrawals)
        {
            <tr>
                <td>
                    @item.Id
                </td>
                <td>
                    @item.Amount BGN
                </td>
                <td>
                    @item.AdditionalInstructions
                </td>
                <td>
                    @item.CreatedOn.ToLocalTime().ToString(GlobalConstants.DateTimeFormat, CultureInfo.InvariantCulture)
                </td>
                <td>
                    @item.Status
                </td>
                <td>
                    @item.CompletedOn.ToLocalTime().ToString(GlobalConstants.DateTimeFormat, CultureInfo.InvariantCulture)
                </td>
                <td>
                    @item.ResolutionNotes
                </td>
            </tr>
        }
    </tbody>
</table>
