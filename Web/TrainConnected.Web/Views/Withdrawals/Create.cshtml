@model TrainConnected.Web.InputModels.Withdrawals.WithdrawalCreateInputModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var balance = this.ViewData["userBalance"];
    var pending = this.ViewData["pendingWithdrawals"];
    var withdrawableAmonut = (decimal)balance - (decimal)pending;

}

<h1>Create</h1>

<h5>Your Balance: @balance BGN</h5>
<h5>Your Pending Withdrawals: @pending BGN</h5>
<h4>Withdrawable Amount: @withdrawableAmonut BGN</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AdditionalInstructions" class="control-label"></label>
                <input asp-for="AdditionalInstructions" class="form-control" />
                <span asp-validation-for="AdditionalInstructions" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="All">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
